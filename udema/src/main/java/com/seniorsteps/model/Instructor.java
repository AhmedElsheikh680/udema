package com.seniorsteps.model;
// Generated Nov 21, 2020 2:55:45 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Instructor generated by hbm2java
 */
@Entity
@Table(name="instructor"
    ,catalog="online_courses"
)
public class Instructor  implements java.io.Serializable {


     private int id;
     private Lookup lookup;
     private User user;
     private String about;
     private String email;
     private String linkedIn;
     private String name;
     private String youtubeChannel;
     private Set<Course> courses = new HashSet<Course>(0);

    public Instructor() {
    }

	
    public Instructor(User user) {
        this.user = user;
    }
    public Instructor(Lookup lookup, User user, String about, String email, String linkedIn, String name, String youtubeChannel, Set<Course> courses) {
       this.lookup = lookup;
       this.user = user;
       this.about = about;
       this.email = email;
       this.linkedIn = linkedIn;
       this.name = name;
       this.youtubeChannel = youtubeChannel;
       this.courses = courses;
    }
   
     @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="user"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="ID", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="FIELD_ID")
    public Lookup getLookup() {
        return this.lookup;
    }
    
    public void setLookup(Lookup lookup) {
        this.lookup = lookup;
    }

@OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    
    @Column(name="ABOUT")
    public String getAbout() {
        return this.about;
    }
    
    public void setAbout(String about) {
        this.about = about;
    }

    
    @Column(name="EMAIL")
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="LINKED_IN")
    public String getLinkedIn() {
        return this.linkedIn;
    }
    
    public void setLinkedIn(String linkedIn) {
        this.linkedIn = linkedIn;
    }

    
    @Column(name="NAME")
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="YOUTUBE_CHANNEL")
    public String getYoutubeChannel() {
        return this.youtubeChannel;
    }
    
    public void setYoutubeChannel(String youtubeChannel) {
        this.youtubeChannel = youtubeChannel;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="instructor")
    public Set<Course> getCourses() {
        return this.courses;
    }
    
    public void setCourses(Set<Course> courses) {
        this.courses = courses;
    }




}


